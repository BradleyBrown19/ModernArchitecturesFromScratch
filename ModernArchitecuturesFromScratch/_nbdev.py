# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"ba4": "AdvancedTrainingLoop.ipynb",
         "Dataset": "TrainingLoop.ipynb",
         "DataLoader": "TrainingLoop.ipynb",
         "Databunch": "AdvancedTrainingLoop.ipynb",
         "Runner": "AdvancedTrainingLoop.ipynb",
         "Callback": "AdvancedTrainingLoop.ipynb",
         "TrainEvalCallback": "AdvancedTrainingLoop.ipynb",
         "Stat": "AdvancedTrainingLoop.ipynb",
         "StatTracker": "AdvancedTrainingLoop.ipynb",
         "Stats": "AdvancedTrainingLoop.ipynb",
         "MNIST_URL": "BasicOperations.ipynb",
         "is_equal": "BasicOperations.ipynb",
         "show_im": "BasicOperations.ipynb",
         "mpl.rcParams['image.cmap']": "BasicOperations.ipynb",
         "near": "BasicOperations.ipynb",
         "test_near": "BasicOperations.ipynb",
         "matmul4": "BasicOperations.ipynb",
         "ba3": "Convolutions and Pooling.ipynb",
         "Reshape": "Convolutions and Pooling.ipynb",
         "Flatten": "Convolutions and Pooling.ipynb",
         "get_fan": "Convolutions and Pooling.ipynb",
         "get_gain": "Convolutions and Pooling.ipynb",
         "get_weight": "FullyConnectedNetwork.ipynb",
         "Padding": "Convolutions and Pooling.ipynb",
         "convolve": "Convolutions and Pooling.ipynb",
         "conv_back": "Convolutions and Pooling.ipynb",
         "Conv": "Convolutions and Pooling.ipynb",
         "get_linear_model": "Convolutions and Pooling.ipynb",
         "get_model": "TrainingLoop.ipynb",
         "get_small_datasets": "Convolutions and Pooling.ipynb",
         "train,valid": "Convolutions and Pooling.ipynb",
         "max_pool": "Convolutions and Pooling.ipynb",
         "avg_pool": "Convolutions and Pooling.ipynb",
         "pool": "Convolutions and Pooling.ipynb",
         "max_back": "Convolutions and Pooling.ipynb",
         "average_back": "Convolutions and Pooling.ipynb",
         "pool_back": "Convolutions and Pooling.ipynb",
         "Pool": "Convolutions and Pooling.ipynb",
         "ba1": "FullyConnectedNetwork.ipynb",
         "normalize": "FullyConnectedNetwork.ipynb",
         "get_mnist": "FullyConnectedNetwork.ipynb",
         "test_near_zero": "FullyConnectedNetwork.ipynb",
         "get_stats": "FullyConnectedNetwork.ipynb",
         "linear": "FullyConnectedNetwork.ipynb",
         "relu": "FullyConnectedNetwork.ipynb",
         "lin_rel": "FullyConnectedNetwork.ipynb",
         "softmax": "FullyConnectedNetwork.ipynb",
         "mse_loss": "FullyConnectedNetwork.ipynb",
         "Module": "TrainingLoop.ipynb",
         "Linear": "TrainingLoop.ipynb",
         "ReLU": "TrainingLoop.ipynb",
         "CrossSoft": "FullyConnectedNetwork.ipynb",
         "Model": "FullyConnectedNetwork.ipynb",
         "ba2": "TrainingLoop.ipynb",
         "log_softmax": "TrainingLoop.ipynb",
         "logsumexp": "TrainingLoop.ipynb",
         "log_softmax_improved": "TrainingLoop.ipynb",
         "nll": "TrainingLoop.ipynb",
         "cross_entropy": "TrainingLoop.ipynb",
         "accuracy": "TrainingLoop.ipynb",
         "SequentialModel": "TrainingLoop.ipynb",
         "Parameter": "TrainingLoop.ipynb",
         "CrossEntropy": "TrainingLoop.ipynb",
         "Optimizer": "TrainingLoop.ipynb",
         "Batcher": "TrainingLoop.ipynb",
         "collate": "TrainingLoop.ipynb",
         "fit": "TrainingLoop.ipynb",
         "get_datasets": "TrainingLoop.ipynb"}

modules = ["advanced_training_loop_05.py",
           "basic_operations_01.py",
           "convolutions_pooling_04.py",
           "fully_connected_network_02.py",
           "training_loop_03.py"]

doc_url = "https://BradleyBrown19.github.io/ModernArchitecuturesFromScratch/"

git_url = "https://github.com/BradleyBrown19/ModernArchitecuturesFromScratch/tree/master/"

def custom_doc_links(name): return None
