# AUTOGENERATED! DO NOT EDIT! File to edit: BasicOperations.ipynb (unless otherwise specified).

__all__ = ['MNIST_URL', 'Path', 'set_trace', 'datasets', 'pickle', 'gzip', 'math', 'torch', 'tensor', 'random', 'pdb',
           'is_equal', 'show_im', 'near', 'test_near', 'matmul4']

# Cell
import fastai
from pathlib import Path
from IPython.core.debugger import set_trace
from fastai import datasets
import pickle, gzip, math, torch, matplotlib as mpl
import matplotlib.pyplot as plt

#the only torch import we will have in the project
from torch import tensor
import random
import pdb



MNIST_URL='http://deeplearning.net/data/mnist/mnist.pkl'

# Cell
def is_equal(a,b):
    assert(a==b)

# Cell
mpl.rcParams['image.cmap'] = 'gray'
def show_im(image, size=28):
    im_size = image.flatten().shape[0]
    if im_size > size**2:
        image = image[random.randint(0,math.floor((im_size-1)/size**2))]
    plt.imshow(image.view(size,size))

# Cell
def near(a,b): return torch.allclose(a, b, rtol=1e-3, atol=1e-5)
def test_near(a,b):
    if near(a,b) == True:
        print("good")
    else:
        print("not near")

# Cell
def matmul4(a,b): return a @ b