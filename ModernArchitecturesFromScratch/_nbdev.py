# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"CheckGrad": "Batchnorm.ipynb",
         "Batchnorm": "Batchnorm.ipynb",
         "get_conv_model": "Batchnorm.ipynb",
         "get_conv_learner": "Batchnorm.ipynb",
         "get_conv_runner": "Batchnorm.ipynb",
         "Dataset": "ModelTraining.ipynb",
         "DataLoader": "ModelTraining.ipynb",
         "Databunch": "Callbacks.ipynb",
         "get_databunch": "Callbacks.ipynb",
         "get_mnist_databunch": "Callbacks.ipynb",
         "Learner": "Optimizers.ipynb",
         "get_learner": "ScratchToPytorch.ipynb",
         "Runner": "ScratchToPytorch.ipynb",
         "get_runner": "ScratchToPytorch.ipynb",
         "Callback": "Callbacks.ipynb",
         "TrainEvalCallback": "ScratchToPytorch.ipynb",
         "Stat": "Callbacks.ipynb",
         "StatTracker": "Callbacks.ipynb",
         "Stats": "Callbacks.ipynb",
         "Optimizer": "ModelTraining.ipynb",
         "Scheduler": "Callbacks.ipynb",
         "annealer": "Callbacks.ipynb",
         "linear_scheduler": "Callbacks.ipynb",
         "cos_scheduler": "Callbacks.ipynb",
         "combine_scheds": "Callbacks.ipynb",
         "HyperRecorder": "Callbacks.ipynb",
         "accuracy": "ScratchToPytorch.ipynb",
         "loss": "Callbacks.ipynb",
         "ProgressCallback": "ScratchToPytorch.ipynb",
         "Reshape": "Convolutions&Pooling.ipynb",
         "Flatten": "Convolutions&Pooling.ipynb",
         "get_fan": "Convolutions&Pooling.ipynb",
         "get_gain": "Convolutions&Pooling.ipynb",
         "get_weight": "FullyConnectedNetwork.ipynb",
         "Padding": "Convolutions&Pooling.ipynb",
         "convolve": "Convolutions&Pooling.ipynb",
         "conv_back": "Convolutions&Pooling.ipynb",
         "Conv": "Convolutions&Pooling.ipynb",
         "get_linear_model": "Convolutions&Pooling.ipynb",
         "get_model": "ModelTraining.ipynb",
         "get_small_datasets": "Convolutions&Pooling.ipynb",
         "max_pool": "Convolutions&Pooling.ipynb",
         "avg_pool": "Convolutions&Pooling.ipynb",
         "pool": "Convolutions&Pooling.ipynb",
         "max_back": "Convolutions&Pooling.ipynb",
         "average_back": "Convolutions&Pooling.ipynb",
         "pool_back": "Convolutions&Pooling.ipynb",
         "Pool": "Convolutions&Pooling.ipynb",
         "linear": "FullyConnectedNetwork.ipynb",
         "relu": "FullyConnectedNetwork.ipynb",
         "lin_rel": "FullyConnectedNetwork.ipynb",
         "softmax": "FullyConnectedNetwork.ipynb",
         "mse_loss": "FullyConnectedNetwork.ipynb",
         "Module": "ModelTraining.ipynb",
         "Linear": "ModelTraining.ipynb",
         "ReLU": "ModelTraining.ipynb",
         "CrossSoft": "FullyConnectedNetwork.ipynb",
         "eps": "FullyConnectedNetwork.ipynb",
         "Model": "FullyConnectedNetwork.ipynb",
         "GRU": "GRU.ipynb",
         "LSTM": "LSTM.ipynb",
         "logsumexp": "ModelTraining.ipynb",
         "log_softmax_improved": "ModelTraining.ipynb",
         "nll": "ModelTraining.ipynb",
         "cross_entropy": "ModelTraining.ipynb",
         "fit": "ModelTraining.ipynb",
         "Parameter": "Optimizers.ipynb",
         "SequentialModel": "ModelTraining.ipynb",
         "CrossEntropy": "ModelTraining.ipynb",
         "Batcher": "ModelTraining.ipynb",
         "collate": "ModelTraining.ipynb",
         "get_datasets": "ModelTraining.ipynb",
         "sgd_step": "Optimizers.ipynb",
         "l2_reg_step": "Optimizers.ipynb",
         "update_defaults": "Optimizers.ipynb",
         "update_default_states": "Optimizers.ipynb",
         "StatedOptimizer": "Optimizers.ipynb",
         "OptimStat": "Optimizers.ipynb",
         "AverageGrad": "Optimizers.ipynb",
         "momentum_step": "Optimizers.ipynb",
         "OptimCounter": "Optimizers.ipynb",
         "AverageSquaredGrad": "Optimizers.ipynb",
         "debias": "Optimizers.ipynb",
         "adam_step": "Optimizers.ipynb",
         "adam_opt": "Optimizers.ipynb",
         "NestedModel": "ResNet.ipynb",
         "TestMixingGrads": "ResNet.ipynb",
         "AutoConv": "XResNet.ipynb",
         "ConvBatch": "ResNet.ipynb",
         "Identity": "XResNet.ipynb",
         "BasicRes": "ResNet.ipynb",
         "BasicResBlock": "ResNet.ipynb",
         "BottleneckBlock": "ResNet.ipynb",
         "ResBlock": "cycleGAN.ipynb",
         "ResLayer": "ResNet.ipynb",
         "ResNet": "ResNet.ipynb",
         "GetResnet": "ResNet.ipynb",
         "get_imaggenette": "XResNet.ipynb",
         "CustomLearner": "ScratchToPytorch.ipynb",
         "CudaCallback": "XResNet.ipynb",
         "hw_bb": "SingleShotDetector.ipynb",
         "bb_hw": "SingleShotDetector.ipynb",
         "show_img": "SingleShotDetector.ipynb",
         "draw_outline": "SingleShotDetector.ipynb",
         "draw_rect": "SingleShotDetector.ipynb",
         "draw_text": "SingleShotDetector.ipynb",
         "draw_im": "SingleShotDetector.ipynb",
         "draw_idx": "SingleShotDetector.ipynb",
         "get_res_body": "SingleShotDetector.ipynb",
         "StandardConv": "SingleShotDetector.ipynb",
         "PredictionConv": "SingleShotDetector.ipynb",
         "SSDHead": "SingleShotDetector.ipynb",
         "GenericModel": "SingleShotDetector.ipynb",
         "ConvBatchLayer": "XResNet.ipynb",
         "BaseRes": "XResNet.ipynb",
         "XResnet": "XResNet.ipynb",
         "getResnet": "XResNet.ipynb",
         "MNIST_URL": "basic_operations.ipynb",
         "is_equal": "basic_operations.ipynb",
         "near": "basic_operations.ipynb",
         "test_near": "basic_operations.ipynb",
         "test_near_zero": "basic_operations.ipynb",
         "normalize": "basic_operations.ipynb",
         "get_mnist": "basic_operations.ipynb",
         "get_stats": "basic_operations.ipynb",
         "show_im": "basic_operations.ipynb",
         "matmul": "basic_operations.ipynb",
         "AutoTransConv": "cycleGAN.ipynb",
         "trans_conv_norm_relu": "cycleGAN.ipynb",
         "pad_conv_norm_relu": "cycleGAN.ipynb",
         "conv_norm_relu": "cycleGAN.ipynb",
         "generator": "cycleGAN.ipynb",
         "discriminator": "cycleGAN.ipynb",
         "cycleGAN": "cycleGAN.ipynb",
         "DynamicLoss": "cycleGAN.ipynb",
         "CycleGANLoss": "cycleGAN.ipynb",
         "cycleGANTrainer": "cycleGAN.ipynb",
         "say_hello": "tutorial.ipynb",
         "HelloSayer": "tutorial.ipynb"}

modules = ["BERT.py",
           "batchnorm_06.py",
           "callbacks_05.py",
           "convolutions_pooling_04.py",
           "fully_connected_network_02.py",
           "GRU.py",
           "lstm.py",
           "model_training_03.py",
           "optimizers_07.py",
           "resnet_08.py",
           "scratch_to_pytorch.py",
           "SSD.py",
           "XResNet.py",
           "basic_operations_01.py",
           "cycleGAN.py",
           "tutorial.py"]

doc_url = "https://BradleyBrown19.github.io/ModernArchitecturesFromScratch/"

git_url = "https://github.com/BradleyBrown19/ModernArchitecturesFromScratch/tree/master/"

def custom_doc_links(name): return None
